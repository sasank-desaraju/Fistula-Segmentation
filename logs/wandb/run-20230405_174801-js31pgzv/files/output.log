
{'PROJECT_NAME': 'FistulaSegmentation', 'MODEL_NAME': 'Development', 'RUN_NAME': '2023-04-05-17-48-00', 'WANDB_RUN_GROUP': 'Local', 'FAST_DEV_RUN': False, 'MAX_EPOCHS': 1, 'MAX_STEPS': 5, 'STRATEGY': None, 'DATA_DIR': 'data', 'RANDOM_STATE': 42, 'DATA_NAME': 'BaseSplit', 'USE_TRANSFORMS': False, 'IMAGE_ROOT': '/media/sasank/LinuxStorage/Dropbox (UFL)/FistulaData/Segmentations/', 'IMAGE_SIZE': [512, 512, 96], 'CKPT_FILE': '', 'BATCH_SIZE': 1, 'SHUFFLE': True, 'NUM_WORKERS': 2, 'PIN_MEMORY': False, 'LOAD_FROM_CHECKPOINT': False, 'learning_rate': 0.001}
GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
IPU available: False, using: 0 IPUs
HPU available: False, using: 0 HPUs
Sanity Checking: 0it [00:00, ?it/s]
Checkpoint directory /home/sasank/Documents/GitRepos/Fistula-Segmentation/checkpoints exists and is not empty.
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]
  | Name          | Type     | Params
-------------------------------------------
0 | _model        | UNet     | 4.8 M
1 | loss_function | DiceLoss | 0
-------------------------------------------
4.8 M     Trainable params
0         Non-trainable params
4.8 M     Total params
19.232    Total estimated model params size (MB)

Epoch 0:   0%|                                                                                                                                                                                    | 0/40 [00:00<?, ?it/s]
y_pred should be a binarized tensor.






Epoch 0:  12%|██████████████████▌                                                                                                                                 | 5/40 [00:18<02:07,  3.65s/it, loss=0.996, v_num=pgzv]
Traceback (most recent call last):
  File "/home/sasank/Documents/GitRepos/Fistula-Segmentation/scripts/fit.py", line 95, in <module>
    main(config, wandb_logger)
  File "/home/sasank/Documents/GitRepos/Fistula-Segmentation/scripts/fit.py", line 59, in main
    trainer.fit(model, data_module)
  File "/home/sasank/miniconda3/envs/jtml/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 608, in fit
    call._call_and_handle_interrupt(
  File "/home/sasank/miniconda3/envs/jtml/lib/python3.10/site-packages/pytorch_lightning/trainer/call.py", line 38, in _call_and_handle_interrupt
    return trainer_fn(*args, **kwargs)
  File "/home/sasank/miniconda3/envs/jtml/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 650, in _fit_impl
    self._run(model, ckpt_path=self.ckpt_path)
  File "/home/sasank/miniconda3/envs/jtml/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 1112, in _run
    results = self._run_stage()
  File "/home/sasank/miniconda3/envs/jtml/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 1191, in _run_stage
    self._run_train()
  File "/home/sasank/miniconda3/envs/jtml/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 1214, in _run_train
    self.fit_loop.run()
  File "/home/sasank/miniconda3/envs/jtml/lib/python3.10/site-packages/pytorch_lightning/loops/loop.py", line 200, in run
    self.on_advance_end()
  File "/home/sasank/miniconda3/envs/jtml/lib/python3.10/site-packages/pytorch_lightning/loops/fit_loop.py", line 295, in on_advance_end
    self.trainer._call_callback_hooks("on_train_epoch_end")
  File "/home/sasank/miniconda3/envs/jtml/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 1394, in _call_callback_hooks
    fn(self, self.lightning_module, *args, **kwargs)
  File "/home/sasank/miniconda3/envs/jtml/lib/python3.10/site-packages/pytorch_lightning/callbacks/early_stopping.py", line 184, in on_train_epoch_end
    self._run_early_stopping_check(trainer)
  File "/home/sasank/miniconda3/envs/jtml/lib/python3.10/site-packages/pytorch_lightning/callbacks/early_stopping.py", line 195, in _run_early_stopping_check
    if trainer.fast_dev_run or not self._validate_condition_metric(  # disable early_stopping with fast_dev_run
  File "/home/sasank/miniconda3/envs/jtml/lib/python3.10/site-packages/pytorch_lightning/callbacks/early_stopping.py", line 150, in _validate_condition_metric
    raise RuntimeError(error_msg)
RuntimeError: Early stopping conditioned on metric `val/loss` which is not available. Pass in or modify your `EarlyStopping` callback to use any of the following: `train/loss`, `train/dice`