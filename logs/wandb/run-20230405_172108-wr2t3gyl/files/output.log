
{'PROJECT_NAME': 'FistulaSegmentation', 'MODEL_NAME': 'Development', 'RUN_NAME': '2023-04-05-17-21-07', 'WANDB_RUN_GROUP': 'Local', 'FAST_DEV_RUN': False, 'MAX_EPOCHS': 1, 'MAX_STEPS': 5, 'STRATEGY': None, 'DATA_DIR': 'data', 'RANDOM_STATE': 42, 'DATA_NAME': 'BaseSplit', 'USE_TRANSFORMS': False, 'IMAGE_ROOT': '/media/sasank/LinuxStorage/Dropbox (UFL)/FistulaData/Segmentations/', 'IMAGE_SIZE': [512, 512, 96], 'CKPT_FILE': '', 'BATCH_SIZE': 1, 'SHUFFLE': True, 'NUM_WORKERS': 2, 'PIN_MEMORY': False, 'LOAD_FROM_CHECKPOINT': False, 'learning_rate': 0.001}
GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
IPU available: False, using: 0 IPUs
HPU available: False, using: 0 HPUs
Sanity Checking: 0it [00:00, ?it/s]
Checkpoint directory /home/sasank/Documents/GitRepos/Fistula-Segmentation/checkpoints exists and is not empty.
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]
  | Name          | Type     | Params
-------------------------------------------
0 | _model        | UNet     | 4.8 M
1 | loss_function | DiceLoss | 0
-------------------------------------------
4.8 M     Trainable params
0         Non-trainable params
4.8 M     Total params
19.232    Total estimated model params size (MB)

Epoch 0:   0%|                                                                                                                                                                                    | 0/40 [00:00<?, ?it/s]
y_pred should be a binarized tensor.




Epoch 0:  12%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ                                                                                                  | 5/40 [00:17<02:01,  3.48s/it, loss=0.988, v_num=3gyl, train/loss=0.988, train/dice=0.012]
`ModelCheckpoint(monitor='val_loss')` could not find the monitored key in the returned metrics: ['train/loss', 'train/dice', 'epoch', 'step']. HINT: Did you call `log('val_loss', value)` in the `LightningModule`?
`Trainer.fit` stopped: `max_steps=5` reached.
[34m[1mwandb[39m[22m: [33mWARNING[39m Saving files without folders. If you want to preserve sub directories pass base_path to wandb.save, i.e. wandb.save("/mnt/folder/file.h5", base_path="/mnt")